#include <iostream>
#include <math.h>
#include <string>
using namespace std;

//выводит длинну наибольшего палиндрома, который можно составить из букв строки

int polindrom(string& p) {

	if (p.length() == 0) {
		return 0;
	}

	int* word = new int[26];
	int* wordBig = new int[26];

	for (int i = 0; i < 26; i++) {

		wordBig[i] = 0;
		word[i] = 0;

	}

	for (size_t i = 0; i < p.length(); i++) {
		if (p[i] < 91) {
			wordBig[p[i] - 65]++;
		}
		else {
			word[p[i] - 97]++;
		}
	}

	int ne = 0;
	int che = 0;

	for (int i = 0; i < 26; i++) {

		if (word[i] > 0) {

			if (word[i] % 2 != 0 && ne == 0) {
				ne = word[i];
			}
			else {
				if (word[i] % 2 == 0) {
					che = che + word[i];
				}
				else {
					che = che + word[i] - 1;
				}
			}
		}
	}

	for (int i = 0; i < 26; i++) {

		if (wordBig[i] > 0) {

			if (wordBig[i] % 2 != 0 && ne == 0) {
				ne = wordBig[i];
			}
			else {
				if (wordBig[i] % 2 == 0) {
					che = che + wordBig[i];
				}
				else {
					che = che + wordBig[i] - 1;
				}
			}
		}
	}
	return ne + che;
}

int main() {

	string p;
	getline(cin, p);

	cout << polindrom(p);

	return 0;
}
